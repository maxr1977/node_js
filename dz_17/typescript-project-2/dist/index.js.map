{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,SAAS,cAAc,CAAC,KAAa,EAAE,QAAgB,EAAE,WAAmB,CAAC;IACzE,MAAM,KAAK,GAAG,KAAK,GAAG,QAAQ,CAAC;IAC/B,MAAM,eAAe,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;IACzD,OAAO,eAAe,CAAC;AAC3B,CAAC;AACD,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC1B,OAAO,CAAC,GAAG,CAAC,2BAA2B,MAAM,EAAE,CAAC,CAAC;AACjD,OAAO,CAAC,GAAG,CAAC,wBAAwB,MAAM,EAAE,CAAC,CAAC;AAE9C,uCAAuC;AACvC,IAAI,EAAmB,CAAC;AACxB,SAAS,SAAS,CAAC,EAAmB;IAClC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACzB,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;AACL,CAAC;AACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC1B,EAAE,GAAG,QAAQ,CAAC;AACd,SAAS,CAAC,EAAE,CAAC,CAAC;AACd,EAAE,GAAG,GAAG,CAAC;AACT,SAAS,CAAC,EAAE,CAAC,CAAC;AAQd,MAAM,MAAM,GAAY;IACpB,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE;IACrD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;IACnD,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE;CACxD,CAAC;AACF,SAAS,oBAAoB,CAAC,MAAe,EAAE,MAA2C;IACtF,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;AAC3D,CAAC;AACD,MAAM,aAAa,GAAG,oBAAoB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;AAE9C,4CAA4C;AAC5C,IAAI,SAAS,GAA8B;IACvC,UAAU,EAAE,EAAE;IACd,SAAS,EAAE,EAAE;CAChB,CAAC;AAEF,SAAS,WAAW,CAClB,SAAoC,EACpC,WAAqC;IAErC,MAAM,CAAC,IAAI,EAAE,AAAD,EAAG,KAAK,CAAC,GAAG,WAAW,CAAC;IAEpC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;QAClC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC;IAC3B,CAAC;SAAM,CAAC;QACN,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC1B,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvB,IAAI,QAAQ,GAA6B,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC/D,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,2BAA2B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvB,IAAI,QAAQ,GAA6B,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;AACjE,SAAS,GAAG,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,kCAAkC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC","sourcesContent":["// Задание 1. Типизация функции с несколькими параметрами\r\nfunction calculateTotal(price: number, quantity: number, discount: number = 0): number {\r\n    const total = price * quantity;\r\n    const discountedTotal = total - (total * discount / 100);\r\n    return discountedTotal;\r\n}\r\nconst total1 = calculateTotal(100, 2); \r\nconst total2 = calculateTotal(100, 2, 10); \r\nconsole.log('\\nЗадание 1')\r\nconsole.log(`Total without discount: ${total1}`);\r\nconsole.log(`Total with discount: ${total2}`);\r\n\r\n// Задание 2. Использование Union типов\r\nlet id: string | number;\r\nfunction displayId(id: string | number): void {\r\n    console.log(`ID: ${id}`);\r\n    if (typeof id === 'string') {\r\n        console.log(`ID in uppercase: ${id.toUpperCase()}`);\r\n    } else {\r\n        console.log(`ID multiplied by 10: ${id * 10}`);\r\n    }\r\n}\r\nconsole.log('\\nЗадание 2')\r\nid = \"abc123\";\r\ndisplayId(id);\r\nid = 456;\r\ndisplayId(id);\r\n\r\n// Задание 3. Объявление и типизация массивов объектов\r\ninterface Order {\r\n    orderId: string;\r\n    amount: number;\r\n    status: 'pending' | 'shipped' | 'delivered';\r\n}\r\nconst orders: Order[] = [\r\n    { orderId: 'A001', amount: 250, status: 'pending' },\r\n    { orderId: 'A002', amount: 450, status: 'shipped' },\r\n    { orderId: 'A003', amount: 300, status: 'delivered' },\r\n    { orderId: 'A004', amount: 150, status: 'shipped' },\r\n    { orderId: 'A005', amount: 500, status: 'pending' },\r\n    { orderId: 'A006', amount: 700, status: 'delivered' }\r\n];\r\nfunction filterOrdersByStatus(orders: Order[], status: 'pending' | 'shipped' | 'delivered'): Order[] {\r\n    return orders.filter(order => order.status === status);\r\n}\r\nconst shippedOrders = filterOrdersByStatus(orders, 'shipped');\r\nconsole.log('\\nЗадание 3')\r\nconsole.log('Shipped Orders:', shippedOrders);\r\n\r\n// Задание 4. Работа с кортежами и объектами\r\nlet inventory: { [key: string]: number } = {\r\n    \"Смартфон\": 25,\r\n    \"Планшет\": 15\r\n};\r\n\r\nfunction updateStock(\r\n  inventory: { [key: string]: number },\r\n  productInfo: [string, number, number] \r\n): { [key: string]: number } {\r\n  const [name, , stock] = productInfo;\r\n\r\n  if (inventory[name] !== undefined) {\r\n    inventory[name] += stock; \r\n  } else {\r\n    inventory[name] = stock; \r\n  }\r\n  return inventory;\r\n}\r\nconsole.log('\\nЗадание 4')\r\nconsole.log('\\nНачальное состояние склада:');\r\nconsole.log(inventory);\r\nlet product1: [string, number, number] = [\"Ноутбук\", 75000, 5];\r\ninventory = updateStock(inventory, product1);\r\nconsole.log(`\\nДобавлен новый товар: ${product1[0]}`);\r\nconsole.log(inventory);\r\nlet product2: [string, number, number] = [\"Смартфон\", 35000, 10];\r\ninventory = updateStock(inventory, product2);\r\nconsole.log(`\\nОбновлено количество товара: ${product2[0]}`);\r\nconsole.log(inventory);\r\n"]}