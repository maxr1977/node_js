{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Задание 1. Объединение и пересечение типов\r\ntype Admin = {\r\n  name: string;\r\n  permissions: string[];\r\n};\r\n\r\ntype User = {\r\n  name: string;\r\n  email: string;\r\n};\r\n\r\ntype AdminUser = Admin & User;\r\nconst adminUserObject: AdminUser = {\r\n    name: \"Alice\",\r\n    permissions: [\"read\", \"write\"],\r\n    email: \"alice@example.com\"\r\n};\r\nfunction getAdminUserInfo(adminUser: AdminUser): void {\r\n    console.log(`Name: ${adminUser.name}`);\r\n    console.log(`Email: ${adminUser.email}`);\r\n    console.log(`Permissions: ${adminUser.permissions.join(\", \")}`);\r\n}\r\n\r\nconsole.log('\\nЗадание 1')\r\ngetAdminUserInfo(adminUserObject);\r\n\r\n// Задание 2. Вложенные объекты и опциональные поля\r\ntype Engine = {\r\n  type: string;\r\n  horsepower: number;\r\n};\r\ntype Car = {\r\n  make: string;\r\n  model: string;\r\n  year?: number;\r\n  engine: Engine;\r\n};\r\nconst car1: Car = {\r\n    make: \"Toyota\",\r\n    model: \"Camry\",\r\n    year: 2020,\r\n    engine: {\r\n        type: \"V6\",\r\n        horsepower: 301\r\n    }\r\n};\r\nconst car2: Car = {\r\n    make: \"Honda\",\r\n    model: \"Civic\",\r\n    engine: {\r\n        type: \"I4\",\r\n        horsepower: 158\r\n    }\r\n};\r\nfunction getCarInfo(car: Car): void {\r\n    console.log(`Make: ${car.make}`);\r\n    console.log(`Model: ${car.model}`);\r\n    if (car.year) {\r\n        console.log(`Year: ${car.year}`);\r\n    }\r\n    console.log(`Engine Type: ${car.engine.type}`);\r\n    console.log(`Horsepower: ${car.engine.horsepower}`);\r\n}\r\nconsole.log('\\nЗадание 2')\r\ngetCarInfo(car1);\r\nconsole.log('---');\r\ngetCarInfo(car2);\r\n\r\n// Задание 3. Интерфейс для функции с объектом\r\ninterface Product {\r\n  name: string;\r\n  price: number;\r\n}\r\ninterface CalculateDiscount {\r\n  (product: Product, discount: number): number;\r\n}\r\nconst calculateDiscount: CalculateDiscount = (product, discount) => {\r\n    return product.price - (product.price * discount / 100);\r\n}\r\nconst product: Product = { name: \"Laptop\", price: 1000 };\r\nconst discount = 15;\r\nconst discountedPrice = calculateDiscount(product, discount);\r\nconsole.log('\\nЗадание 3')\r\nconsole.log(`Original Price: $${product.price}`);\r\nconsole.log(`Discounted Price: $${discountedPrice}`);\r\n\r\n// Задание 4. Массив объектов и функции\r\ninterface Employee {\r\n  name: string;\r\n  salary: number;\r\n}\r\nconst employees: Employee[] = [\r\n    { name: \"John\", salary: 50000 },\r\n    { name: \"Jane\", salary: 60000 },\r\n    { name: \"Doe\", salary: 55000 }\r\n];\r\nfunction calculateTotalSalary(employees: Employee[]): number [] {\r\n    return employees.map(emp => emp.salary);\r\n}\r\nconst totalSalaries = calculateTotalSalary(employees);\r\nconsole.log('\\nЗадание 4')\r\nconsole.log('Salary array:',totalSalaries);\r\n\r\n// Задание 5. Наследование интерфейсов и работа с объектами\r\ninterface Person {\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\ninterface Student extends Person {\r\n    grade: number;\r\n}\r\nconst student: Student = {\r\n    firstName: \"Emily\",\r\n    lastName: \"Clark\",\r\n    grade: 10\r\n};\r\nfunction getStudentInfo(student: Student): void {\r\n    console.log(`Name: ${student.firstName} ${student.lastName}`);\r\n    console.log(`Grade: ${student.grade}`);\r\n}\r\nconsole.log('\\nЗадание 5')\r\ngetStudentInfo(student);\r\n\r\n// Задание 6. Интерфейс для функции с несколькими параметрами\r\ninterface StringConcatenator {\r\n    (str1: string, str2: string): string;\r\n}\r\nconst concftStrings: StringConcatenator = (str1, str2) => {\r\n    return str1 + str2;\r\n};\r\nconst result = concftStrings(\"Hello, \", \"World!\");\r\nconsole.log('\\nЗадание 6')\r\nconsole.log(result);"]}